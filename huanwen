int main() {
	// Get the amount of "processing units"
	int n = std::thread::hardware_concurrency();
	
	// Create array of threads
	vector<ThreadItem> threadlist;
	threadlist.resize(n);
	
	// Spawn a thread for each core
	for(int i = 0;i < n;i++) {
		threadlist[i].worker = thread(ThreadFunction,&threadlist[i].result); // pass rand() as data argument
	}
	
	// Wait for them all to finish
	for(int i = 0;i < n;i++) {
		threadlist[i].worker.join();
	}
	
	// Present their calculation results
	printf("Results:\n");
	for(int i = 0;i < n;i++) {
		printf("%s\n",threadlist[i].result);
	}
}
